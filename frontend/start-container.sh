#!/bin/bash

# =======================================================
# SCRIPT DE D√âMARRAGE INTELLIGENT CONTENEUR FRONTEND
# =======================================================

set -e

echo "üåê D√©marrage du conteneur frontend LifeHub..."
echo "=============================================="

# Configuration
MODE=${NODE_ENV:-development}
FRONTEND_PORT=${PORT:-3000}
SSL_DIR="/etc/nginx/ssl"

echo "üìã Mode: $MODE"
echo "üìã Port: $FRONTEND_PORT"

# Fonction de g√©n√©ration SSL
generate_ssl() {
    echo "üîê G√©n√©ration des certificats SSL..."
    
    if [ ! -f "$SSL_DIR/lifehub.crt" ] || [ ! -f "$SSL_DIR/lifehub.key" ]; then
        openssl genrsa -out "$SSL_DIR/lifehub.key" 2048
        openssl req -new -x509 -key "$SSL_DIR/lifehub.key" -out "$SSL_DIR/lifehub.crt" -days 365 \
            -subj "/C=FR/ST=IDF/L=Paris/O=LifeHub/OU=Frontend/CN=localhost/emailAddress=dev@lifehub.local" \
            -addext "subjectAltName=DNS:localhost,DNS:lifehub.local,DNS:*.lifehub.local,IP:127.0.0.1"
        
        echo "‚úÖ Certificats SSL g√©n√©r√©s"
    else
        echo "‚úÖ Certificats SSL existants"
    fi
}

# Fonction pour d√©marrer en mode d√©veloppement
start_development() {
    echo "üöÄ Mode D√©veloppement - React Dev Server"
    echo "========================================"
    
    # Installer/mettre √† jour les d√©pendances si n√©cessaire
    if [ ! -d "node_modules" ] || [ ! -f "node_modules/.installed" ]; then
        echo "üì¶ Installation des d√©pendances..."
        npm install
        touch node_modules/.installed
    fi
    
    echo ""
    echo "üéØ Services disponibles en mode DEV :"
    echo "   üîß React Dev Server : http://localhost:$FRONTEND_PORT"
    echo "   üîÑ Hot Reload       : Activ√©"
    echo "   üêõ DevTools         : Disponibles"
    echo ""
    
    # D√©marrer le serveur de d√©veloppement React
    exec npm run dev -- --host 0.0.0.0 --port $FRONTEND_PORT
}

# Fonction pour d√©marrer en mode production
start_production() {
    echo "üöÄ Mode Production - nginx + React Build"
    echo "========================================"
    
    # G√©n√©rer les certificats SSL
    generate_ssl
    
    # Build de l'application si n√©cessaire
    if [ ! -d "dist" ] || [ ! -f "dist/index.html" ]; then
        echo "üì¶ Build de l'application React..."
        npm run build
    else
        echo "‚úÖ Build React existant trouv√©"
    fi
    
    # Copier les fichiers build√©s vers nginx
    cp -r dist/* /var/www/html/
    
    echo ""
    echo "üéØ Services disponibles en mode PROD :"
    echo "   üåê Frontend HTTPS   : https://localhost"
    echo "   üîí Redirection HTTP : http://localhost ‚Üí https://localhost"
    echo "   üè• Health Check     : https://localhost/nginx-health"
    echo ""
    
    # D√©marrer nginx en arri√®re-plan
    nginx -g "daemon off;" &
    NGINX_PID=$!
    
    # Fonction de nettoyage
    cleanup() {
        echo ""
        echo "üõë Arr√™t du conteneur frontend..."
        kill $NGINX_PID 2>/dev/null || true
        exit 0
    }
    
    # Capturer les signaux
    trap cleanup SIGTERM SIGINT
    
    # Attendre nginx
    wait $NGINX_PID
}

# Fonction pour d√©marrer en mode hybride (dev + nginx)
start_hybrid() {
    echo "üöÄ Mode Hybride - React Dev + nginx SSL"
    echo "======================================"
    
    # G√©n√©rer SSL
    generate_ssl
    
    # Build initial
    npm run build
    cp -r dist/* /var/www/html/
    
    # D√©marrer nginx en arri√®re-plan
    nginx -g "daemon off;" &
    NGINX_PID=$!
    
    # D√©marrer le dev server en arri√®re-plan
    npm run dev -- --host 0.0.0.0 --port $FRONTEND_PORT &
    DEV_PID=$!
    
    echo ""
    echo "üéØ Services disponibles en mode HYBRIDE :"
    echo "   üîß React Dev Server : http://localhost:$FRONTEND_PORT (hot reload)"
    echo "   üåê Frontend HTTPS   : https://localhost (nginx SSL)"
    echo "   üîÑ Hot Reload       : http://localhost:$FRONTEND_PORT"
    echo ""
    
    # Fonction de nettoyage
    cleanup() {
        echo ""
        echo "üõë Arr√™t du conteneur frontend hybride..."
        kill $NGINX_PID 2>/dev/null || true
        kill $DEV_PID 2>/dev/null || true
        exit 0
    }
    
    # Capturer les signaux
    trap cleanup SIGTERM SIGINT
    
    # Attendre les processus
    wait
}

# D√©marrage selon le mode
case "$MODE" in
    "development")
        start_development
        ;;
    "production")
        start_production
        ;;
    "hybrid")
        start_hybrid
        ;;
    *)
        echo "‚ùå Mode invalide: $MODE"
        echo "Modes disponibles: development, production, hybrid"
        exit 1
        ;;
esac 