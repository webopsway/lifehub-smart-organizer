version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lifehub_frontend
    restart: unless-stopped
    
    # Ports pour tous les modes
    ports:
      - "3000:3000"  # React dev server
      - "80:80"      # nginx HTTP
      - "443:443"    # nginx HTTPS
      
    # Variables d'environnement configurables
    environment:
      # Mode: development, production, hybrid
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000/api}
      - VITE_APP_NAME=LifeHub Smart Organizer
      
    # Volumes pour développement ET production
    volumes:
      # Code source monté pour développement en temps réel
      - ./src:/app/src:rw
      - ./public:/app/public:rw
      - ./index.html:/app/index.html:rw
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./vite.config.ts:/app/vite.config.ts:ro
      - ./tailwind.config.ts:/app/tailwind.config.ts:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.app.json:/app/tsconfig.app.json:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      - ./eslint.config.js:/app/eslint.config.js:ro
      - ./components.json:/app/components.json:ro
      
      # Configuration nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      
      # Certificats SSL persistants
      - ./volumes/ssl:/etc/nginx/ssl:rw
      
      # Logs nginx accessibles
      - ./volumes/logs:/var/log/nginx:rw
      
      # Node modules persistants pour performance
      - frontend_node_modules:/app/node_modules
      
      # Build React persistant
      - ./dist:/app/dist:rw
      
      # Variables d'environnement
      - ../.env-files/frontend.env:/app/.env:ro
      
    # Réseau
    networks:
      - lifehub_frontend_network
      
    # Health check adaptatif selon le mode
    healthcheck:
      test: |
        if [ "$$NODE_ENV" = "development" ]; then
          curl -f http://localhost:3000 || exit 1
        else
          curl -k -f https://localhost/nginx-health || exit 1
        fi
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    # Limites de ressources
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

# Réseau dédié frontend
networks:
  lifehub_frontend_network:
    driver: bridge
    external: false

# Volumes nommés pour performance
volumes:
  frontend_node_modules:
    driver: local 